                 
//////////////////////////////////////////////////////////////////////////////
//Quicksort
//this code is  created by Rezaul Hoque on January 03,2023
//contact:jewelmrh@yahoo.com;rhoque4478@gmail.com;Dhaka,Bangladesh;https://rezaulhoque.wordpress.com,https://hoquestake.blogspot.com
//note: codes shared by Rezaul Hoque on github are not for sale; they are created and shared to facilitate the algorithm learning process; many like Hoque use this platform to practice programming ;Rezaul hopes his contribution helps others to fine tune their learning;
///////////////////////////////////////////////////////////////////////////
#include <iostream>
void swap(int& a,int& b){
   int tmp=a;
         a=b;
         b=tmp;
}
int partition(int * ar,int start,int end)
{
  int piv=ar[end];
  int i= (start-1);
  
  for (int j=start;j<=end-1;j++){
     if (ar[j]<piv){
         i=i+1;
         swap(ar[i],ar[j]);
    }
  }
swap(ar[i+1],ar[end]);
return (i+1);
}
void quicksort(int * ar,int start,int end){
  if(start<end){
   int q=partition(ar,start, end);
   quicksort(ar,start,q-1);
   quicksort(ar,q+1,end);
  }
}


int main()
{
int n=8;
  int a[8]={ 2,7,8,1,3,5,6,4 };
std::cout<<"Before Quicksort:\n";
for(int i=0;i<n;i++)
  std::cout<<" "<<a[i];
quicksort(a,0,n-1);
std::cout<<" \n";

std::cout<<"After Quicksort:\n";
for(int i=0;i<n;i++)
  std::cout<<" "<<a[i];
return 0;

}
