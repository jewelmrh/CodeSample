
#####################################
#pyGradStud:Python equivalent of C++ program GradStud
#this code is  created by Rezaul Hoque on April 18,2023
#contact:jewelmrh@yahoo.com;rhoque4478@gmail.com;Dhaka,Bangladesh;https://rezaulhoque.wordpress.com,https://hoquestake.blogspot.com
#note:codes shared by Rezaul Hoque on github are not for sale; they are created and shared to facilitate the algorithm learning process; many like Hoque use this platform to practice programming ;Rezaul hopes his contribution helps others to fine tune their learning;
######################################
class noNeg(Exception):
   def __init__(self,num,message="Number can't be negative.Check home/street/phone number!"):
      self.num=num
      self.message=message
      super().__init__(self.message)

class noBlank(Exception):
   def __init__(self,s,message="Enter name of the city.It can't be left blank!"):
      self.s=s
      self.message=message
      super().__init__(self.message)

class Address:
   def __init__(self,city,home,street, phone):
         self.city=city
         if self.city == " ":
            raise noBlank(self.city)
         self.home=home
         if self.home<0:
            raise noNeg(self.home)
         self.street=street
         if self.street<0:
            raise noNeg(self.street)
         self.phone=phone
         if self.phone<0:
            raise noNeg(self.phone)

class Date:
   def __init__(self,month,day,year):
         self.month=month
         self.day=day
         self. year=year

class University:
   def __init__(self,name,ad,dt):
         self. name=name
         self.ad=ad
         self.dt=dt

class Degree:
   def __init__(self,title,uni,dte):
         self.title=title
         self. uni=uni
         self.dte=dte

class GradStud:
   def __init__(self,dep,deg):
         self.dep=dep
         self.deg=deg
   def display (self):
         print(f"Department :{self.dep}")
         print(f"Degree: {self.deg.title}")
         print(f"University:{self.deg.uni.name},\n" f"Address:\n" f"{self.deg.uni.ad.city},{self.deg.uni.ad.home},\n" f"{self.deg.uni.ad.street}, {self.deg.uni.ad.phone},\n" f"Established:{self.deg.uni. dt.month}/{self.deg.uni.dt.day}/{self.deg.uni.dt.year}\n" f"Date Awarded:{self.deg.dte.month}/{self.deg.dte.day}/{self.deg.dte.year}")

g=GradStud("Dept of Sorcery",Degree("Master of Sorcery",University ("Hogwarts School of Witchcraft and Wizardry",Address("Highlands ",99,00,98765),Date(1,1,990)),Date(1,1,991)))
g.display ()
   

