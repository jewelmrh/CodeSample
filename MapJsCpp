//g++  7.4.0
///////////////////////////////////////////////////////////////////////////
//MapJsCpp:C++ equivalent of JavaScript Array map method
//this code is  created by Rezaul Hoque on June 10,2023;
//contact:jewelmrh@yahoo.com;rhoque4478@gmail.com;Dhaka,Bangladesh;https://rezaulhoque.wordpress.com,https://hoquestake.blogspot.com
//note: codes shared by Rezaul Hoque on github are not for sale; they are created and shared to facilitate the algorithm learning process; many like Hoque use this platform to practice programming ;Rezaul hopes his contribution helps others to fine tune their learning;
/////////////////////////////////////////////////////////////////////////////
#include <iostream>
template <class T>
void square(T* a,int sz){
T r[sz];
for(int k=0;k<sz;k++)
r[k]=a[k]*a[k];
for(int k=0;k<sz;k++)
std::cout<<r[k]<<" ";
std::cout<<"\n";
}

template <class T>
void cube(T* a,int sz){
T r[sz];
for(int k=0;k<sz;k++)
r[k]=a[k]*a[k]*a[k];
for(int k=0;k<sz;k++)
std::cout<<r[k]<<" ";
std::cout<<"\n";
}
template <class T>
class Filter{
private:
T* a;
public:
Filter (){}
void map(T *a,int sz,void (*f)(T *,int)){
f(a,sz);
}
};
int main()
{
Filter<int> f;
int a[]={1,5,4,3,2};
int n=sizeof(a)/sizeof(a[0]);
f.map(a,n,&cube);
return 0;
}
